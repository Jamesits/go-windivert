//go:build windows

// Code generated by goinvoke invoker; DO NOT EDIT.
// Documentation: https://pkg.go.dev/github.com/jamesits/goinvoke
// Full command line: `"invoker" "-dll" "..\..\WinDivert.dll" "-output" "library.go" "-type" "LibraryReference" "-generate"`
//go:generate "invoker" "-dll" "..\\..\\WinDivert.dll" "-output" "library.go" "-type" "LibraryReference" "-generate"

package ffi

import (
	"github.com/jamesits/goinvoke"
	"golang.org/x/sys/windows"
)

// LibraryReference contains all exports from "WinDivert.dll".
type LibraryReference struct {
	WinDivertClose                   *windows.LazyProc `func:"WinDivertClose"`
	WinDivertGetParam                *windows.LazyProc `func:"WinDivertGetParam"`
	WinDivertHelperCalcChecksums     *windows.LazyProc `func:"WinDivertHelperCalcChecksums"`
	WinDivertHelperCompileFilter     *windows.LazyProc `func:"WinDivertHelperCompileFilter"`
	WinDivertHelperDecrementTTL      *windows.LazyProc `func:"WinDivertHelperDecrementTTL"`
	WinDivertHelperEvalFilter        *windows.LazyProc `func:"WinDivertHelperEvalFilter"`
	WinDivertHelperFormatFilter      *windows.LazyProc `func:"WinDivertHelperFormatFilter"`
	WinDivertHelperFormatIPv4Address *windows.LazyProc `func:"WinDivertHelperFormatIPv4Address"`
	WinDivertHelperFormatIPv6Address *windows.LazyProc `func:"WinDivertHelperFormatIPv6Address"`
	WinDivertHelperHashPacket        *windows.LazyProc `func:"WinDivertHelperHashPacket"`
	WinDivertHelperHtonIPv6Address   *windows.LazyProc `func:"WinDivertHelperHtonIPv6Address"`
	WinDivertHelperHtonIpv6Address   *windows.LazyProc `func:"WinDivertHelperHtonIpv6Address"`
	WinDivertHelperHtonl             *windows.LazyProc `func:"WinDivertHelperHtonl"`
	WinDivertHelperHtonll            *windows.LazyProc `func:"WinDivertHelperHtonll"`
	WinDivertHelperHtons             *windows.LazyProc `func:"WinDivertHelperHtons"`
	WinDivertHelperNtohIPv6Address   *windows.LazyProc `func:"WinDivertHelperNtohIPv6Address"`
	WinDivertHelperNtohIpv6Address   *windows.LazyProc `func:"WinDivertHelperNtohIpv6Address"`
	WinDivertHelperNtohl             *windows.LazyProc `func:"WinDivertHelperNtohl"`
	WinDivertHelperNtohll            *windows.LazyProc `func:"WinDivertHelperNtohll"`
	WinDivertHelperNtohs             *windows.LazyProc `func:"WinDivertHelperNtohs"`
	WinDivertHelperParseIPv4Address  *windows.LazyProc `func:"WinDivertHelperParseIPv4Address"`
	WinDivertHelperParseIPv6Address  *windows.LazyProc `func:"WinDivertHelperParseIPv6Address"`
	WinDivertHelperParsePacket       *windows.LazyProc `func:"WinDivertHelperParsePacket"`
	WinDivertOpen                    *windows.LazyProc `func:"WinDivertOpen"`
	WinDivertRecv                    *windows.LazyProc `func:"WinDivertRecv"`
	WinDivertRecvEx                  *windows.LazyProc `func:"WinDivertRecvEx"`
	WinDivertSend                    *windows.LazyProc `func:"WinDivertSend"`
	WinDivertSendEx                  *windows.LazyProc `func:"WinDivertSendEx"`
	WinDivertSetParam                *windows.LazyProc `func:"WinDivertSetParam"`
	WinDivertShutdown                *windows.LazyProc `func:"WinDivertShutdown"`
}

// Unmarshal loads the corresponding DLL into memory and fills export functions defined in the struct.
func (dll *LibraryReference) Unmarshal(path string) error {
	return goinvoke.Unmarshal(path, dll)
}
